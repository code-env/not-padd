"var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var b=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),f=(e,n)=>{for(var o in n)i(e,o,{get:n[o],enumerable:!0})},u=(e,n,o,r)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let c of m(n))!C.call(e,c)&&c!==o&&i(e,c,{get:()=>n[c],enumerable:!(r=p(n,c))||r.enumerable});return e};var g=(e,n,o)=>(o=e!=null?h(x(e)):{},u(n||!e||!e.__esModule?i(o,\"default\",{value:e,enumerable:!0}):o,e)),j=e=>u(i({},\"__esModule\",{value:!0}),e);var a=b((_,s)=>{s.exports=_jsx_runtime});var k={};f(k,{default:()=>d});var t=g(a());function l(e){let n={code:\"code\",h3:\"h3\",li:\"li\",p:\"p\",pre:\"pre\",ul:\"ul\",...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:\"Building a Counter Component in React\"}),`\n`,(0,t.jsx)(n.p,{children:\"React makes it easy to build reusable UI components. Let\\u2019s create a simple counter app that increments and decrements a number.\"}),`\n`,(0,t.jsx)(n.pre,{language:\"jsx\",meta:\"\",code:`\\`\\`\\`jsx\nimport { useState } from \"react\";\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h1>{count}</h1>\n      <button onClick={() => setCount(count - 1)}>-</button>\n      <button onClick={() => setCount(count + 1)}>+</button>\n    </div>\n  );\n}\n\\`\\`\\``,children:(0,t.jsx)(n.code,{className:\"language-jsx\",children:`import { useState } from \"react\";\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h1>{count}</h1>\n      <button onClick={() => setCount(count - 1)}>-</button>\n      <button onClick={() => setCount(count + 1)}>+</button>\n    </div>\n  );\n}\n`})}),`\n`,(0,t.jsx)(n.h3,{children:\"How It Works\"}),`\n`,(0,t.jsxs)(n.ul,{children:[`\n`,(0,t.jsxs)(n.li,{children:[`\n`,(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:\"useState(0)\"}),\" initializes the counter at \",(0,t.jsx)(n.code,{children:\"0\"}),\".\"]}),`\n`]}),`\n`,(0,t.jsxs)(n.li,{children:[`\n`,(0,t.jsxs)(n.p,{children:[\"The \",(0,t.jsx)(n.code,{children:\"setCount\"}),\" function updates the state.\"]}),`\n`]}),`\n`,(0,t.jsxs)(n.li,{children:[`\n`,(0,t.jsxs)(n.p,{children:[\"When you click \",(0,t.jsx)(n.code,{children:\"+\"}),\" or \",(0,t.jsx)(n.code,{children:\"-\"}),\", the number changes instantly \\u2014 thanks to React\\u2019s reactivity.\"]}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(n.p,{children:\"That\\u2019s it! You\\u2019ve built a functional counter in just a few lines.\"})]})}function d(e={}){let{wrapper:n}=e.components||{};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}return j(k);})();\n;return Component;"